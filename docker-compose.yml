services:
    rest-server-sawyer:
        image: rest-server
        container_name: sawyer-rest-server
        volumes:
            - "./rest-server:/home/"
            - "./img:/img"
        environment:
            - "ROS_IP=${HOST_IP?error}"
            - "ROS_PORT=${ROS_PORT?error}"
            - "ROBOT_NAME=${ROBOT_NAME?error}"
            - "ROBOT_IP=${ROBOT_IP?error}"
            - "NODE_RED_PORT=${NODE_RED_PORT}"
            - "PORT=${NODE_RED_PORT}"
            - "REST_SERVER_PORT=${FLASK_PORT}"
            - "FLASK_PORT=${FLASK_PORT?error}"
            - "FLASK_DEBUG=${FLASK_DEBUG:-0}"
            - "QI_LOG_LEVEL=${QI_LOG_LEVEL:-4}"
            - "PYTHONUNBUFFERED=${PYTHONUNBUFFERED:-0}"
            - TZ=Europe/Berlin
        network_mode: host
        healthcheck:
            test:
                - CMD-SHELL
                - "curl --fail http://localhost:${FLASK_PORT}"
            interval: 10s
            retries: 20
            start_period: 10s
            timeout: 10s
        restart: "on-failure:20"
    ros-sawyer:
        image: ros-sawyer
        container_name: ros_sawyer
        volumes:
            - "./img:/img"
            - "./ros-sawyer/log:/log"
        network_mode: host
        command: /bin/bash /entrypoint.sh
        environment:
            - "ROS_MASTER_URI=http://${ROBOT_IP?error}:11311"
            - "ROS_IP=${HOST_IP?error}"
            - "ROS_PORT=${ROS_PORT?error}"
        depends_on:
            rest-server-sawyer:
                condition: service_healthy
        healthcheck:
            test:
                - CMD-SHELL
                - "nc -z ${HOST_IP} 8000"
            interval: 10s
            retries: 5
            start_period: 10s
            timeout: 10s
        restart: "on-failure:5"
